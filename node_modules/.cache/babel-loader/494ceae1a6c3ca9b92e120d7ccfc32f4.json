{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'LogIn',\n\n  data() {\n    return {\n      email: '',\n      password: '',\n      errors: []\n    };\n  },\n\n  mounted() {\n    document.title = 'Log In | GTL';\n  },\n\n  methods: {\n    async submitForm() {\n      axios.defaults.headers.common[\"Authorization\"] = \"\";\n      localStorage.removeItem(\"token\");\n      const formData = {\n        email: this.email,\n        password: this.password\n      };\n      await axios.post(\"/api/v1/CustomUser/login\", formData).then(response => {\n        const token = response.data.auth_token;\n        const userid = response.data.id;\n        console.log(userid, \"token\");\n        this.$store.commit('setToken', token);\n        this.$store.commit('setUserId', userid);\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"userid\", userid);\n        const toPath = this.$route.query.to || '/cart';\n        this.$router.push(toPath);\n      }).catch(error => {\n        if (error.response) {\n          for (const property in error.response.data) {\n            this.errors.push(`${property}: ${error.response.data[property]}`);\n          }\n        } else {\n          this.errors.push('Something went wrong. Please try again');\n          console.log(JSON.stringify(error));\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0DA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACXC,IAAI,EAAE,OADK;;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,EADJ;MAEHC,QAAQ,EAAE,EAFP;MAGHC,MAAM,EAAE;IAHL,CAAP;EAKH,CARU;;EASXC,OAAO,GAAG;IACNC,QAAQ,CAACC,KAAT,GAAiB,cAAjB;EACH,CAXU;;EAYXC,OAAO,EAAE;IACL,MAAMC,UAAN,GAAmB;MACfV,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,EAAjD;MACAC,YAAY,CAACC,UAAb,CAAwB,OAAxB;MACA,MAAMC,QAAO,GAAI;QACbb,KAAK,EAAE,KAAKA,KADC;QAEbC,QAAQ,EAAE,KAAKA;MAFF,CAAjB;MAIA,MAAMJ,KAAI,CACLiB,IADC,CACI,0BADJ,EACgCD,QADhC,EAEDE,IAFC,CAEIC,QAAO,IAAK;QACd,MAAMC,KAAI,GAAID,QAAQ,CAACjB,IAAT,CAAcmB,UAA5B;QACA,MAAMC,MAAM,GAACH,QAAQ,CAACjB,IAAT,CAAcqB,EAA3B;QACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAmB,OAAnB;QACA,KAAKI,MAAL,CAAYC,MAAZ,CAAmB,UAAnB,EAA+BP,KAA/B;QACA,KAAKM,MAAL,CAAYC,MAAZ,CAAmB,WAAnB,EAAgCL,MAAhC;QAEAtB,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,WAAWO,KAA5D;QACAN,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;QACAN,YAAY,CAACc,OAAb,CAAqB,QAArB,EAA+BN,MAA/B;QACA,MAAMO,MAAK,GAAI,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,EAAlB,IAAwB,OAAvC;QACA,KAAKC,OAAL,CAAaC,IAAb,CAAkBL,MAAlB;MACH,CAdC,EAeDM,KAfC,CAeKC,KAAI,IAAK;QACZ,IAAIA,KAAK,CAACjB,QAAV,EAAoB;UAChB,KAAK,MAAMkB,QAAX,IAAuBD,KAAK,CAACjB,QAAN,CAAejB,IAAtC,EAA4C;YACxC,KAAKG,MAAL,CAAY6B,IAAZ,CAAkB,GAAEG,QAAS,KAAID,KAAK,CAACjB,QAAN,CAAejB,IAAf,CAAoBmC,QAApB,CAA8B,EAA/D;UACJ;QACJ,CAJA,MAIO;UACH,KAAKhC,MAAL,CAAY6B,IAAZ,CAAiB,wCAAjB;UAEAV,OAAO,CAACC,GAAR,CAAYa,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAZ;QACJ;MACH,CAzBC,CAAN;IA0BJ;;EAlCK;AAZE,CAAf","names":["axios","name","data","email","password","errors","mounted","document","title","methods","submitForm","defaults","headers","common","localStorage","removeItem","formData","post","then","response","token","auth_token","userid","id","console","log","$store","commit","setItem","toPath","$route","query","to","$router","push","catch","error","property","JSON","stringify"],"sourceRoot":"","sources":["/home/faiz/Anas-Defy/glass-vue/src/views/login.vue"],"sourcesContent":["  \n<template>\n  <div class=\"page-sign-up m-5 row\">\n\n        <div class=\"col-4 \">\n\n        </div>\n      <div class=\"col-4 is-offset-4\">\n        <h1 class=\"heading\"> <b>  Log in </b></h1>\n\n        <form @submit.prevent=\"submitForm\" >\n          <div class=\"form-group mt-4 mb-5\">\n            <!-- <label for=\"formGroupExampleInput\" class=\"form-label\">Username</label> -->\n            <p class=\"form-label\"> <b> Email </b></p> \n            <div class=\"\">\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput\"\n                placeholder=\"Enter Email\"\n                v-model=\"email\"\n              />\n            </div>\n          </div>\n\n            <div class=\"form-group mt-4 mb-5\" >\n                <!-- <label for=\"formGroupExampleInput2\">Password</label> -->\n                <p class=\"form-label\"> <strong> Password</strong></p> \n                <div class=\"control\">\n                <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"formGroupExampleInput2\"\n                    placeholder=\"Enter Password\"\n                    v-model=\"password\"\n                />\n                </div>\n          </div>\n\n          <!-- warning -->\n          <div class=\"notification is-danger\" v-if=\"errors.length\">\n            <!-- <p v-for=\"error in errors\" v-bind:key=\"error\">{{ error }}</p> -->\n            <p>Username or password is not valid </p>\n          </div>\n\n            <button type=\"submit\" class=\"btn btn-success\">Log in</button>\n\n          <hr />\n\n          Or <router-link to=\"/sign-up\">click here</router-link> <b> to Sign Up! </b> \n          \n        </form>\n      </div>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios'\nexport default {\n    name: 'LogIn',\n    data() {\n        return {\n            email: '',\n            password: '',\n            errors: []\n        }\n    },\n    mounted() {\n        document.title = 'Log In | GTL'\n    },\n    methods: {\n        async submitForm() {\n            axios.defaults.headers.common[\"Authorization\"] = \"\"\n            localStorage.removeItem(\"token\")\n            const formData = {\n                email: this.email,\n                password: this.password\n            }\n            await axios\n                .post(\"/api/v1/CustomUser/login\", formData)\n                .then(response => {\n                    const token = response.data.auth_token\n                    const userid=response.data.id\n                    console.log(userid,\"token\")\n                    this.$store.commit('setToken', token)\n                    this.$store.commit('setUserId', userid)\n                    \n                    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token\n                    localStorage.setItem(\"token\", token)\n                    localStorage.setItem(\"userid\", userid)\n                    const toPath = this.$route.query.to || '/cart'\n                    this.$router.push(toPath)\n                })\n                .catch(error => {\n                    if (error.response) {\n                        for (const property in error.response.data) {\n                            this.errors.push(`${property}: ${error.response.data[property]}`)\n                        }\n                    } else {\n                        this.errors.push('Something went wrong. Please try again')\n                        \n                        console.log(JSON.stringify(error))\n                    }\n                })\n        }\n    }\n}\n</script>\n<style scoped>\na{\n    color: blue;\n    font-weight: bolder;\n}\n.form-label {\n  /* display: inline-block;\n  width: 140px; */\n  margin-bottom: 2px;\n  text-align: left;\n  color: green;\n}\n</style>\nFooter\n"]},"metadata":{},"sourceType":"module"}