{"ast":null,"code":"import postscribe from \"postscribe\";\n\nvar ready = require('document-ready');\n\nexport default {\n  name: \"VueScriptComponent\",\n  props: [\"script\"],\n\n  data() {\n    return {\n      compId: Date.now() //we will use date.now as a soft ID so that users may load multiple vue-script-components without conflicting ids\n\n    };\n  },\n\n  mounted() {\n    var vm = this;\n    ready(function () {\n      let addEl = new Promise((resolve, reject) => {\n        postscribe(`#${vm.compId}`, `${vm.script}`, {\n          done: function (x) {}\n        });\n        resolve();\n      });\n      addEl.then(function (result) {//do nothing\n      });\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAMA,OAAOA,UAAP,MAAuB,YAAvB;;AACA,IAAIC,KAAI,GAAIC,OAAO,CAAC,gBAAD,CAAnB;;AAEA,eAAe;EACbC,IAAI,EAAE,oBADO;EAEbC,KAAK,EAAC,CAAC,QAAD,CAFO;;EAGbC,IAAI,GAAG;IACL,OAAO;MACLC,MAAM,EAAEC,IAAI,CAACC,GAAL,EADH,CACc;;IADd,CAAP;EAGD,CAPY;;EASbC,OAAO,GAAG;IACR,IAAIC,EAAC,GAAI,IAAT;IACAT,KAAK,CAAC,YAAY;MAChB,IAAIU,KAAI,GAAI,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;QACzCd,UAAU,CACP,IAAGU,EAAE,CAACJ,MAAO,EADN,EAEP,GAAEI,EAAE,CAACK,MAAO,EAFL,EAGR;UACEC,IAAI,EAAE,UAASC,CAAT,EAAY,CAAC;QADrB,CAHQ,CAAV;QAQFJ,OAAO;MACR,CAVW,CAAZ;MAWAF,KAAK,CAACO,IAAN,CAAW,UAASC,MAAT,EAAiB,CACxB;MACH,CAFD;IAGD,CAfI,CAAL;EAgBF;;AA3Ba,CAAf","names":["postscribe","ready","require","name","props","data","compId","Date","now","mounted","vm","addEl","Promise","resolve","reject","script","done","x","then","result"],"sourceRoot":"","sources":["/home/fiaz/Documents/GitHub/gtl-vue/node_modules/vue-script-component/src/components/VueScriptComponent.vue"],"sourcesContent":["<template>\n  <div :id=\"compId\">\n  </div>\n</template>\n\n<script>\nimport postscribe from \"postscribe\"\nvar ready = require('document-ready')\n\nexport default {\n  name: \"VueScriptComponent\",\n  props:[\"script\"],\n  data() {\n    return {\n      compId: Date.now() //we will use date.now as a soft ID so that users may load multiple vue-script-components without conflicting ids\n    };\n  },\n\n  mounted() {\n    var vm = this\n    ready(function () {\n      let addEl = new Promise((resolve, reject) => {\n          postscribe(\n            `#${vm.compId}`,\n            `${vm.script}`,\n            {\n              done: function(x) {}\n            }\n          );\n\n        resolve()\n      });      \n      addEl.then(function(result) {\n          //do nothing\n      })\n    })\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}