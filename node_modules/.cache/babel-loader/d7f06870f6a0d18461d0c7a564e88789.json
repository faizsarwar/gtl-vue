{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/**\n * Vue 3 Carousel 0.1.46\n * (c) 2022\n * @license MIT\n */\nimport { defineComponent, ref, reactive, provide, onMounted, nextTick, onUnmounted, computed, watch, watchEffect, h, withModifiers, inject } from 'vue';\nconst defaultConfigs = {\n  itemsToShow: 1,\n  itemsToScroll: 1,\n  modelValue: 0,\n  transition: 300,\n  autoplay: 0,\n  snapAlign: 'center',\n  wrapAround: false,\n  pauseAutoplayOnHover: false,\n  mouseDrag: true,\n  touchDrag: true,\n  dir: 'ltr',\n  breakpoints: undefined\n};\nconst carouselProps = {\n  // count of items to showed per view\n  itemsToShow: {\n    default: defaultConfigs.itemsToShow,\n    type: Number\n  },\n  // count of items to be scrolled\n  itemsToScroll: {\n    default: defaultConfigs.itemsToScroll,\n    type: Number\n  },\n  // control infinite scrolling mode\n  wrapAround: {\n    default: defaultConfigs.wrapAround,\n    type: Boolean\n  },\n  // control snap position alignment\n  snapAlign: {\n    default: defaultConfigs.snapAlign,\n\n    validator(value) {\n      // The value must match one of these strings\n      return ['start', 'end', 'center', 'center-even', 'center-odd'].includes(value);\n    }\n\n  },\n  // sliding transition time in ms\n  transition: {\n    default: defaultConfigs.transition,\n    type: Number\n  },\n  // an object to store breakpoints\n  breakpoints: {\n    default: defaultConfigs.breakpoints,\n    type: Object\n  },\n  // time to auto advance slides in ms\n  autoplay: {\n    default: defaultConfigs.autoplay,\n    type: Number\n  },\n  // pause autoplay when mouse hover over the carousel\n  pauseAutoplayOnHover: {\n    default: defaultConfigs.pauseAutoplayOnHover,\n    type: Boolean\n  },\n  // slide number number of initial slide\n  modelValue: {\n    default: undefined,\n    type: Number\n  },\n  // toggle mouse dragging.\n  mouseDrag: {\n    default: defaultConfigs.mouseDrag,\n    type: Boolean\n  },\n  // toggle mouse dragging.\n  touchDrag: {\n    default: defaultConfigs.touchDrag,\n    type: Boolean\n  },\n  // control snap position alignment\n  dir: {\n    default: defaultConfigs.dir,\n\n    validator(value) {\n      // The value must match one of these strings\n      return ['rtl', 'ltr'].includes(value);\n    }\n\n  },\n  // an object to pass all settings\n  settings: {\n    default() {\n      return {};\n    },\n\n    type: Object\n  }\n};\n/**\r\n * return a debounced version of the function\r\n * @param fn\r\n * @param delay\r\n */\n// eslint-disable-next-line no-unused-vars\n\nfunction debounce(fn, delay) {\n  let timerId;\n  return function (...args) {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n\n    timerId = setTimeout(() => {\n      fn(...args);\n      timerId = null;\n    }, delay);\n  };\n}\n/**\r\n * return a throttle version of the function\r\n * Throttling\r\n *\r\n */\n// eslint-disable-next-line no-unused-vars\n\n\nfunction throttle(fn, limit) {\n  let inThrottle;\n  return function (...args) {\n    const self = this;\n\n    if (!inThrottle) {\n      fn.apply(self, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n\nfunction getSlidesVNodes(vNode) {\n  var _a, _b, _c; // Return empty array if there's any node\n\n\n  if (!vNode) return []; // Check if the Slides components are added directly without v-for (#72)\n\n  if (((_b = (_a = vNode[0]) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.name) === 'CarouselSlide') return vNode;\n  return ((_c = vNode[0]) === null || _c === void 0 ? void 0 : _c.children) || [];\n}\n\nfunction getMaxSlideIndex(config, slidesCount) {\n  if (config.wrapAround) {\n    return slidesCount - 1;\n  }\n\n  switch (config.snapAlign) {\n    case 'start':\n      return slidesCount - config.itemsToShow;\n\n    case 'end':\n      return slidesCount - 1;\n\n    case 'center':\n    case 'center-odd':\n      return slidesCount - Math.ceil(config.itemsToShow / 2);\n\n    case 'center-even':\n      return slidesCount - Math.ceil(config.itemsToShow / 2);\n\n    default:\n      return 0;\n  }\n}\n\nfunction getMinSlideIndex(config) {\n  if (config.wrapAround) {\n    return 0;\n  }\n\n  switch (config.snapAlign) {\n    case 'start':\n      return 0;\n\n    case 'end':\n      return config.itemsToShow - 1;\n\n    case 'center':\n    case 'center-odd':\n      return Math.floor((config.itemsToShow - 1) / 2);\n\n    case 'center-even':\n      return Math.floor((config.itemsToShow - 2) / 2);\n\n    default:\n      return 0;\n  }\n}\n\nfunction getCurrentSlideIndex(config, val, max, min) {\n  if (config.wrapAround) {\n    return val;\n  }\n\n  return Math.min(Math.max(val, min), max);\n}\n\nfunction getSlidesToScroll({\n  slidesBuffer,\n  currentSlide,\n  snapAlign,\n  itemsToShow,\n  wrapAround,\n  slidesCount\n}) {\n  let output = slidesBuffer.indexOf(currentSlide);\n\n  if (output === -1) {\n    output = slidesBuffer.indexOf(Math.ceil(currentSlide));\n  }\n\n  if (snapAlign === 'center' || snapAlign === 'center-odd') {\n    output -= (itemsToShow - 1) / 2;\n  } else if (snapAlign === 'center-even') {\n    output -= (itemsToShow - 2) / 2;\n  } else if (snapAlign === 'end') {\n    output -= itemsToShow - 1;\n  }\n\n  if (!wrapAround) {\n    const max = slidesCount - itemsToShow;\n    const min = 0;\n    output = Math.max(Math.min(output, max), min);\n  }\n\n  return output;\n}\n\nvar Carousel = defineComponent({\n  name: 'Carousel',\n  props: carouselProps,\n\n  setup(props, {\n    slots,\n    emit,\n    expose\n  }) {\n    var _a;\n\n    const root = ref(null);\n    const slides = ref([]);\n    const slidesBuffer = ref([]);\n    const slideWidth = ref(0);\n    const slidesCount = ref(1);\n    let autoplayTimer;\n    let transitionTimer;\n    let breakpoints = ref({}); // generate carousel configs\n\n    let __defaultConfig = Object.assign({}, defaultConfigs); // current config\n\n\n    const config = reactive(Object.assign({}, __defaultConfig)); // slides\n\n    const currentSlideIndex = ref((_a = config.modelValue) !== null && _a !== void 0 ? _a : 0);\n    const prevSlideIndex = ref(0);\n    const middleSlideIndex = ref(0);\n    const maxSlideIndex = ref(0);\n    const minSlideIndex = ref(0);\n    provide('config', config);\n    provide('slidesBuffer', slidesBuffer);\n    provide('slidesCount', slidesCount);\n    provide('currentSlide', currentSlideIndex);\n    provide('maxSlide', maxSlideIndex);\n    provide('minSlide', minSlideIndex);\n    /**\r\n     * Configs\r\n     */\n\n    function initDefaultConfigs() {\n      // generate carousel configs\n      const mergedConfigs = Object.assign(Object.assign({}, props), props.settings); // Set breakpoints\n\n      breakpoints = ref(Object.assign({}, mergedConfigs.breakpoints)); // remove extra values\n\n      __defaultConfig = Object.assign(Object.assign({}, mergedConfigs), {\n        settings: undefined,\n        breakpoints: undefined\n      });\n      bindConfigs(__defaultConfig);\n    }\n\n    function updateBreakpointsConfigs() {\n      const breakpointsArray = Object.keys(breakpoints.value).map(key => Number(key)).sort((a, b) => +b - +a);\n      let newConfig = Object.assign({}, __defaultConfig);\n      breakpointsArray.some(breakpoint => {\n        const isMatched = window.matchMedia(`(min-width: ${breakpoint}px)`).matches;\n\n        if (isMatched) {\n          newConfig = Object.assign(Object.assign({}, newConfig), breakpoints.value[breakpoint]);\n          return true;\n        }\n\n        return false;\n      });\n      bindConfigs(newConfig);\n    }\n\n    function bindConfigs(newConfig) {\n      for (let key in newConfig) {\n        // @ts-ignore\n        config[key] = newConfig[key];\n      }\n    }\n\n    const handleWindowResize = debounce(() => {\n      if (breakpoints.value) {\n        updateBreakpointsConfigs();\n        updateSlidesData();\n      }\n\n      updateSlideWidth();\n    }, 16);\n    /**\r\n     * Setup functions\r\n     */\n\n    function updateSlideWidth() {\n      if (!root.value) return;\n      const rect = root.value.getBoundingClientRect();\n      slideWidth.value = rect.width / config.itemsToShow;\n    }\n\n    function updateSlidesData() {\n      slidesCount.value = Math.max(slides.value.length, 1);\n      if (slidesCount.value <= 0) return;\n      middleSlideIndex.value = Math.ceil((slidesCount.value - 1) / 2);\n      maxSlideIndex.value = getMaxSlideIndex(config, slidesCount.value);\n      minSlideIndex.value = getMinSlideIndex(config);\n      currentSlideIndex.value = getCurrentSlideIndex(config, currentSlideIndex.value, maxSlideIndex.value, minSlideIndex.value);\n    }\n\n    function updateSlidesBuffer() {\n      const slidesArray = [...Array(slidesCount.value).keys()];\n      const shouldShiftSlides = config.wrapAround && config.itemsToShow + 1 <= slidesCount.value;\n\n      if (shouldShiftSlides) {\n        const buffer = config.itemsToShow !== 1 ? Math.round((slidesCount.value - config.itemsToShow) / 2) : 0;\n        let shifts = buffer - currentSlideIndex.value;\n\n        if (config.snapAlign === 'end') {\n          shifts += Math.floor(config.itemsToShow - 1);\n        } else if (config.snapAlign === 'center' || config.snapAlign === 'center-odd') {\n          shifts++;\n        } // Check shifting directions\n\n\n        if (shifts < 0) {\n          for (let i = shifts; i < 0; i++) {\n            slidesArray.push(Number(slidesArray.shift()));\n          }\n        } else {\n          for (let i = 0; i < shifts; i++) {\n            slidesArray.unshift(Number(slidesArray.pop()));\n          }\n        }\n      }\n\n      slidesBuffer.value = slidesArray;\n    }\n\n    onMounted(() => {\n      if (breakpoints.value) {\n        updateBreakpointsConfigs();\n        updateSlidesData();\n      }\n\n      nextTick(() => setTimeout(updateSlideWidth, 16));\n      initAutoplay();\n      window.addEventListener('resize', handleWindowResize, {\n        passive: true\n      });\n    });\n    onUnmounted(() => {\n      if (transitionTimer) {\n        clearTimeout(transitionTimer);\n      }\n\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer);\n      }\n    });\n    /**\r\n     * Carousel Event listeners\r\n     */\n\n    let isTouch = false;\n    const startPosition = {\n      x: 0,\n      y: 0\n    };\n    const endPosition = {\n      x: 0,\n      y: 0\n    };\n    const dragged = reactive({\n      x: 0,\n      y: 0\n    });\n    const isHover = ref(false);\n\n    const handleMouseEnter = () => {\n      isHover.value = true;\n    };\n\n    const handleMouseLeave = () => {\n      isHover.value = false;\n    };\n\n    function handleDragStart(event) {\n      isTouch = event.type === 'touchstart';\n\n      if (!isTouch && event.button !== 0 || isSliding.value) {\n        return;\n      }\n\n      if (!isTouch) {\n        event.preventDefault();\n      }\n\n      startPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\n      startPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\n      document.addEventListener(isTouch ? 'touchmove' : 'mousemove', handleDragging, true);\n      document.addEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd, true);\n    }\n\n    const handleDragging = throttle(event => {\n      endPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\n      endPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\n      const deltaX = endPosition.x - startPosition.x;\n      const deltaY = endPosition.y - startPosition.y;\n      dragged.y = deltaY;\n      dragged.x = deltaX;\n    }, 16);\n\n    function handleDragEnd() {\n      const direction = config.dir === 'rtl' ? -1 : 1;\n      const tolerance = Math.sign(dragged.x) * 0.4;\n      const draggedSlides = Math.round(dragged.x / slideWidth.value + tolerance) * direction;\n      let newSlide = getCurrentSlideIndex(config, currentSlideIndex.value - draggedSlides, maxSlideIndex.value, minSlideIndex.value); // Prevent clicking if there is clicked slides\n\n      if (draggedSlides && !isTouch) {\n        const captureClick = e => {\n          e.stopPropagation();\n          window.removeEventListener('click', captureClick, true);\n        };\n\n        window.addEventListener('click', captureClick, true);\n      }\n\n      slideTo(newSlide);\n      dragged.x = 0;\n      dragged.y = 0;\n      document.removeEventListener(isTouch ? 'touchmove' : 'mousemove', handleDragging, true);\n      document.removeEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd, true);\n    }\n    /**\r\n     * Autoplay\r\n     */\n\n\n    function initAutoplay() {\n      if (!config.autoplay || config.autoplay <= 0) {\n        return;\n      }\n\n      autoplayTimer = setInterval(() => {\n        if (config.pauseAutoplayOnHover && isHover.value) {\n          return;\n        }\n\n        next();\n      }, config.autoplay);\n    }\n\n    function resetAutoplay() {\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer);\n        autoplayTimer = null;\n      }\n\n      initAutoplay();\n    }\n    /**\r\n     * Navigation function\r\n     */\n\n\n    const isSliding = ref(false);\n\n    function slideTo(slideIndex, mute = false) {\n      if (currentSlideIndex.value === slideIndex || isSliding.value) {\n        return;\n      }\n\n      resetAutoplay(); // Wrap slide index\n\n      const lastSlideIndex = slidesCount.value - 1;\n\n      if (slideIndex > lastSlideIndex) {\n        return slideTo(slideIndex - slidesCount.value);\n      }\n\n      if (slideIndex < 0) {\n        return slideTo(slideIndex + slidesCount.value);\n      }\n\n      isSliding.value = true;\n      prevSlideIndex.value = currentSlideIndex.value;\n      currentSlideIndex.value = slideIndex;\n\n      if (!mute) {\n        emit('update:modelValue', currentSlideIndex.value);\n      }\n\n      transitionTimer = setTimeout(() => {\n        if (config.wrapAround) updateSlidesBuffer();\n        isSliding.value = false;\n      }, config.transition);\n    }\n\n    function next() {\n      let nextSlide = currentSlideIndex.value + config.itemsToScroll;\n\n      if (!config.wrapAround) {\n        nextSlide = Math.min(nextSlide, maxSlideIndex.value);\n      }\n\n      slideTo(nextSlide);\n    }\n\n    function prev() {\n      let prevSlide = currentSlideIndex.value - config.itemsToScroll;\n\n      if (!config.wrapAround) {\n        prevSlide = Math.max(prevSlide, minSlideIndex.value);\n      }\n\n      slideTo(prevSlide);\n    }\n\n    const nav = {\n      slideTo,\n      next,\n      prev\n    };\n    provide('nav', nav);\n    /**\r\n     * Track style\r\n     */\n\n    const slidesToScroll = computed(() => getSlidesToScroll({\n      slidesBuffer: slidesBuffer.value,\n      itemsToShow: config.itemsToShow,\n      snapAlign: config.snapAlign,\n      wrapAround: Boolean(config.wrapAround),\n      currentSlide: currentSlideIndex.value,\n      slidesCount: slidesCount.value\n    }));\n    provide('slidesToScroll', slidesToScroll);\n    const trackStyle = computed(() => {\n      const direction = config.dir === 'rtl' ? -1 : 1;\n      const xScroll = slidesToScroll.value * slideWidth.value * direction;\n      return {\n        transform: `translateX(${dragged.x - xScroll}px)`,\n        transition: `${isSliding.value ? config.transition : 0}ms`\n      };\n    });\n\n    function initCarousel() {\n      initDefaultConfigs();\n    }\n\n    function restartCarousel() {\n      initDefaultConfigs();\n      updateBreakpointsConfigs();\n      updateSlidesData();\n      updateSlidesBuffer();\n      updateSlideWidth();\n      resetAutoplay();\n    }\n\n    function updateCarousel() {\n      updateSlidesData();\n      updateSlidesBuffer();\n    } // Update the carousel on props change\n\n\n    Object.keys(carouselProps).forEach(prop => {\n      if (['modelValue'].includes(prop)) return;\n      watch(() => props[prop], restartCarousel);\n    }); // Init carousel\n\n    initCarousel();\n    watchEffect(() => {\n      // Handel when slides added/removed\n      const needToUpdate = slidesCount.value !== slides.value.length;\n      const currentSlideUpdated = props.modelValue !== undefined && currentSlideIndex.value !== props.modelValue;\n\n      if (currentSlideUpdated) {\n        slideTo(Number(props.modelValue), true);\n      }\n\n      if (needToUpdate) {\n        updateCarousel();\n      }\n    });\n    const data = {\n      config,\n      slidesBuffer,\n      slidesCount,\n      slideWidth,\n      currentSlide: currentSlideIndex,\n      maxSlide: maxSlideIndex,\n      minSlide: minSlideIndex,\n      middleSlide: middleSlideIndex\n    };\n    expose({\n      updateBreakpointsConfigs,\n      updateSlidesData,\n      updateSlideWidth,\n      updateSlidesBuffer,\n      initCarousel,\n      restartCarousel,\n      updateCarousel,\n      slideTo,\n      next,\n      prev,\n      nav,\n      data\n    });\n    const slotSlides = slots.default || slots.slides;\n    const slotAddons = slots.addons;\n    const slotsProps = reactive(data);\n    return () => {\n      const slidesElements = getSlidesVNodes(slotSlides === null || slotSlides === void 0 ? void 0 : slotSlides(slotsProps));\n      const addonsElements = (slotAddons === null || slotAddons === void 0 ? void 0 : slotAddons(slotsProps)) || [];\n      slides.value = slidesElements; // Bind slide order\n\n      slidesElements.forEach((el, index) => el.props.index = index);\n      const trackEl = h('ol', {\n        class: 'carousel__track',\n        style: trackStyle.value,\n        onMousedown: config.mouseDrag ? withModifiers(handleDragStart, ['capture']) : null,\n        onTouchstart: config.touchDrag ? withModifiers(handleDragStart, ['capture']) : null\n      }, slidesElements);\n      const viewPortEl = h('div', {\n        class: 'carousel__viewport'\n      }, trackEl);\n      return h('section', {\n        ref: root,\n        class: {\n          carousel: true,\n          'carousel--rtl': config.dir === 'rtl'\n        },\n        dir: config.dir,\n        'aria-label': 'Gallery',\n        onMouseenter: handleMouseEnter,\n        onMouseleave: handleMouseLeave\n      }, [viewPortEl, addonsElements]);\n    };\n  }\n\n});\nconst icons = {\n  arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\n  arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\n  arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\n  arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z'\n};\n\nconst Icon = props => {\n  const iconName = props.name;\n\n  if (!iconName || typeof iconName !== 'string') {\n    return;\n  }\n\n  const path = icons[iconName];\n  const pathEl = h('path', {\n    d: path\n  });\n  const iconTitle = props.title || iconName;\n  const titleEl = h('title', iconTitle);\n  return h('svg', {\n    class: 'carousel__icon',\n    viewBox: '0 0 24 24',\n    role: 'img',\n    ariaLabel: iconTitle\n  }, [titleEl, pathEl]);\n};\n\nIcon.props = {\n  name: String,\n  title: String\n};\n\nconst Navigation = (props, {\n  slots,\n  attrs\n}) => {\n  const {\n    next: slotNext,\n    prev: slotPrev\n  } = slots || {};\n  const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\n  const maxSlide = inject('maxSlide', ref(1));\n  const minSlide = inject('minSlide', ref(1));\n  const currentSlide = inject('currentSlide', ref(1));\n  const nav = inject('nav', {});\n  const isRTL = config.dir === 'rtl';\n  const prevButton = h('button', {\n    type: 'button',\n    class: ['carousel__prev', !config.wrapAround && currentSlide.value <= minSlide.value && 'carousel__prev--in-active', attrs === null || attrs === void 0 ? void 0 : attrs.class],\n    'aria-label': `Navigate to previous slide`,\n    onClick: nav.prev\n  }, (slotPrev === null || slotPrev === void 0 ? void 0 : slotPrev()) || h(Icon, {\n    name: isRTL ? 'arrowRight' : 'arrowLeft'\n  }));\n  const nextButton = h('button', {\n    type: 'button',\n    class: ['carousel__next', !config.wrapAround && currentSlide.value >= maxSlide.value && 'carousel__next--in-active', attrs === null || attrs === void 0 ? void 0 : attrs.class],\n    'aria-label': `Navigate to next slide`,\n    onClick: nav.next\n  }, (slotNext === null || slotNext === void 0 ? void 0 : slotNext()) || h(Icon, {\n    name: isRTL ? 'arrowLeft' : 'arrowRight'\n  }));\n  return [prevButton, nextButton];\n};\n\nvar Slide = defineComponent({\n  name: 'CarouselSlide',\n  props: {\n    index: {\n      type: Number,\n      default: 1\n    }\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\n    const slidesBuffer = inject('slidesBuffer', ref([]));\n    const currentSlide = inject('currentSlide', ref(0));\n    const slidesToScroll = inject('slidesToScroll', ref(0));\n    const wrapOrder = ref(props.index);\n\n    if (config.wrapAround) {\n      updateOrder();\n      watch(slidesBuffer, updateOrder);\n    }\n\n    function updateOrder() {\n      wrapOrder.value = slidesBuffer.value.indexOf(props.index);\n    }\n\n    const slideStyle = computed(() => {\n      const items = config.itemsToShow;\n      const width = `${1 / items * 100}%`;\n      return {\n        width,\n        order: wrapOrder.value.toString()\n      };\n    });\n\n    const isActive = () => props.index === currentSlide.value;\n\n    const isVisible = () => {\n      const min = Math.ceil(slidesToScroll.value);\n      const max = Math.floor(slidesToScroll.value + config.itemsToShow);\n      const current = slidesBuffer.value.slice(min, max);\n      return current.includes(props.index);\n    };\n\n    const isPrev = () => props.index === slidesBuffer.value[Math.ceil(slidesToScroll.value) - 1];\n\n    const isNext = () => props.index === slidesBuffer.value[Math.floor(slidesToScroll.value + config.itemsToShow)];\n\n    return () => {\n      var _a;\n\n      return h('li', {\n        style: slideStyle.value,\n        class: {\n          carousel__slide: true,\n          'carousel__slide--active': isActive(),\n          'carousel__slide--visible': isVisible(),\n          'carousel__slide--prev': isPrev(),\n          'carousel__slide--next': isNext()\n        }\n      }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\n    };\n  }\n\n});\n\nconst Pagination = () => {\n  const maxSlide = inject('maxSlide', ref(1));\n  const minSlide = inject('minSlide', ref(1));\n  const currentSlide = inject('currentSlide', ref(1));\n  const nav = inject('nav', {});\n\n  function handleButtonClick(slideNumber) {\n    nav.slideTo(slideNumber);\n  }\n\n  const isActive = slide => {\n    const val = currentSlide.value;\n    return val === slide || val > maxSlide.value && slide >= maxSlide.value || val < minSlide.value && slide <= minSlide.value;\n  };\n\n  const children = [];\n\n  for (let slide = minSlide.value; slide < maxSlide.value + 1; slide++) {\n    const button = h('button', {\n      type: 'button',\n      class: {\n        'carousel__pagination-button': true,\n        'carousel__pagination-button--active': isActive(slide)\n      },\n      'aria-label': `Navigate to slide ${slide + 1}`,\n      onClick: () => handleButtonClick(slide)\n    });\n    const item = h('li', {\n      class: 'carousel__pagination-item',\n      key: slide\n    }, button);\n    children.push(item);\n  }\n\n  return h('ol', {\n    class: 'carousel__pagination'\n  }, children);\n};\n\nexport { Carousel, Icon, Navigation, Pagination, Slide };","map":{"version":3,"names":["defineComponent","ref","reactive","provide","onMounted","nextTick","onUnmounted","computed","watch","watchEffect","h","withModifiers","inject","defaultConfigs","itemsToShow","itemsToScroll","modelValue","transition","autoplay","snapAlign","wrapAround","pauseAutoplayOnHover","mouseDrag","touchDrag","dir","breakpoints","undefined","carouselProps","default","type","Number","Boolean","validator","value","includes","Object","settings","debounce","fn","delay","timerId","args","clearTimeout","setTimeout","throttle","limit","inThrottle","self","apply","getSlidesVNodes","vNode","_a","_b","_c","name","children","getMaxSlideIndex","config","slidesCount","Math","ceil","getMinSlideIndex","floor","getCurrentSlideIndex","val","max","min","getSlidesToScroll","slidesBuffer","currentSlide","output","indexOf","Carousel","props","setup","slots","emit","expose","root","slides","slideWidth","autoplayTimer","transitionTimer","__defaultConfig","assign","currentSlideIndex","prevSlideIndex","middleSlideIndex","maxSlideIndex","minSlideIndex","initDefaultConfigs","mergedConfigs","bindConfigs","updateBreakpointsConfigs","breakpointsArray","keys","map","key","sort","a","b","newConfig","some","breakpoint","isMatched","window","matchMedia","matches","handleWindowResize","updateSlidesData","updateSlideWidth","rect","getBoundingClientRect","width","length","updateSlidesBuffer","slidesArray","Array","shouldShiftSlides","buffer","round","shifts","i","push","shift","unshift","pop","initAutoplay","addEventListener","passive","clearInterval","isTouch","startPosition","x","y","endPosition","dragged","isHover","handleMouseEnter","handleMouseLeave","handleDragStart","event","button","isSliding","preventDefault","touches","clientX","clientY","document","handleDragging","handleDragEnd","deltaX","deltaY","direction","tolerance","sign","draggedSlides","newSlide","captureClick","e","stopPropagation","removeEventListener","slideTo","setInterval","next","resetAutoplay","slideIndex","mute","lastSlideIndex","nextSlide","prev","prevSlide","nav","slidesToScroll","trackStyle","xScroll","transform","initCarousel","restartCarousel","updateCarousel","forEach","prop","needToUpdate","currentSlideUpdated","data","maxSlide","minSlide","middleSlide","slotSlides","slotAddons","addons","slotsProps","slidesElements","addonsElements","el","index","trackEl","class","style","onMousedown","onTouchstart","viewPortEl","carousel","onMouseenter","onMouseleave","icons","arrowUp","arrowDown","arrowRight","arrowLeft","Icon","iconName","path","pathEl","d","iconTitle","title","titleEl","viewBox","role","ariaLabel","String","Navigation","attrs","slotNext","slotPrev","isRTL","prevButton","onClick","nextButton","Slide","wrapOrder","updateOrder","slideStyle","items","order","toString","isActive","isVisible","current","slice","isPrev","isNext","carousel__slide","call","Pagination","handleButtonClick","slideNumber","slide","item"],"sources":["/home/fiaz/Documents/GitHub/gtl-vue/node_modules/vue3-carousel/dist/carousel.es.js"],"sourcesContent":["/**\n * Vue 3 Carousel 0.1.46\n * (c) 2022\n * @license MIT\n */\nimport { defineComponent, ref, reactive, provide, onMounted, nextTick, onUnmounted, computed, watch, watchEffect, h, withModifiers, inject } from 'vue';\n\nconst defaultConfigs = {\r\n    itemsToShow: 1,\r\n    itemsToScroll: 1,\r\n    modelValue: 0,\r\n    transition: 300,\r\n    autoplay: 0,\r\n    snapAlign: 'center',\r\n    wrapAround: false,\r\n    pauseAutoplayOnHover: false,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    dir: 'ltr',\r\n    breakpoints: undefined,\r\n};\n\nconst carouselProps = {\r\n    // count of items to showed per view\r\n    itemsToShow: {\r\n        default: defaultConfigs.itemsToShow,\r\n        type: Number,\r\n    },\r\n    // count of items to be scrolled\r\n    itemsToScroll: {\r\n        default: defaultConfigs.itemsToScroll,\r\n        type: Number,\r\n    },\r\n    // control infinite scrolling mode\r\n    wrapAround: {\r\n        default: defaultConfigs.wrapAround,\r\n        type: Boolean,\r\n    },\r\n    // control snap position alignment\r\n    snapAlign: {\r\n        default: defaultConfigs.snapAlign,\r\n        validator(value) {\r\n            // The value must match one of these strings\r\n            return ['start', 'end', 'center', 'center-even', 'center-odd'].includes(value);\r\n        },\r\n    },\r\n    // sliding transition time in ms\r\n    transition: {\r\n        default: defaultConfigs.transition,\r\n        type: Number,\r\n    },\r\n    // an object to store breakpoints\r\n    breakpoints: {\r\n        default: defaultConfigs.breakpoints,\r\n        type: Object,\r\n    },\r\n    // time to auto advance slides in ms\r\n    autoplay: {\r\n        default: defaultConfigs.autoplay,\r\n        type: Number,\r\n    },\r\n    // pause autoplay when mouse hover over the carousel\r\n    pauseAutoplayOnHover: {\r\n        default: defaultConfigs.pauseAutoplayOnHover,\r\n        type: Boolean,\r\n    },\r\n    // slide number number of initial slide\r\n    modelValue: {\r\n        default: undefined,\r\n        type: Number,\r\n    },\r\n    // toggle mouse dragging.\r\n    mouseDrag: {\r\n        default: defaultConfigs.mouseDrag,\r\n        type: Boolean,\r\n    },\r\n    // toggle mouse dragging.\r\n    touchDrag: {\r\n        default: defaultConfigs.touchDrag,\r\n        type: Boolean,\r\n    },\r\n    // control snap position alignment\r\n    dir: {\r\n        default: defaultConfigs.dir,\r\n        validator(value) {\r\n            // The value must match one of these strings\r\n            return ['rtl', 'ltr'].includes(value);\r\n        },\r\n    },\r\n    // an object to pass all settings\r\n    settings: {\r\n        default() {\r\n            return {};\r\n        },\r\n        type: Object,\r\n    },\r\n};\n\n/**\r\n * return a debounced version of the function\r\n * @param fn\r\n * @param delay\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction debounce(fn, delay) {\r\n    let timerId;\r\n    return function (...args) {\r\n        if (timerId) {\r\n            clearTimeout(timerId);\r\n        }\r\n        timerId = setTimeout(() => {\r\n            fn(...args);\r\n            timerId = null;\r\n        }, delay);\r\n    };\r\n}\r\n/**\r\n * return a throttle version of the function\r\n * Throttling\r\n *\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction throttle(fn, limit) {\r\n    let inThrottle;\r\n    return function (...args) {\r\n        const self = this;\r\n        if (!inThrottle) {\r\n            fn.apply(self, args);\r\n            inThrottle = true;\r\n            setTimeout(() => (inThrottle = false), limit);\r\n        }\r\n    };\r\n}\r\nfunction getSlidesVNodes(vNode) {\r\n    var _a, _b, _c;\r\n    // Return empty array if there's any node\r\n    if (!vNode)\r\n        return [];\r\n    // Check if the Slides components are added directly without v-for (#72)\r\n    if (((_b = (_a = vNode[0]) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.name) === 'CarouselSlide')\r\n        return vNode;\r\n    return ((_c = vNode[0]) === null || _c === void 0 ? void 0 : _c.children) || [];\r\n}\r\nfunction getMaxSlideIndex(config, slidesCount) {\r\n    if (config.wrapAround) {\r\n        return slidesCount - 1;\r\n    }\r\n    switch (config.snapAlign) {\r\n        case 'start':\r\n            return slidesCount - config.itemsToShow;\r\n        case 'end':\r\n            return slidesCount - 1;\r\n        case 'center':\r\n        case 'center-odd':\r\n            return slidesCount - Math.ceil(config.itemsToShow / 2);\r\n        case 'center-even':\r\n            return slidesCount - Math.ceil(config.itemsToShow / 2);\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\nfunction getMinSlideIndex(config) {\r\n    if (config.wrapAround) {\r\n        return 0;\r\n    }\r\n    switch (config.snapAlign) {\r\n        case 'start':\r\n            return 0;\r\n        case 'end':\r\n            return config.itemsToShow - 1;\r\n        case 'center':\r\n        case 'center-odd':\r\n            return Math.floor((config.itemsToShow - 1) / 2);\r\n        case 'center-even':\r\n            return Math.floor((config.itemsToShow - 2) / 2);\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\nfunction getCurrentSlideIndex(config, val, max, min) {\r\n    if (config.wrapAround) {\r\n        return val;\r\n    }\r\n    return Math.min(Math.max(val, min), max);\r\n}\r\nfunction getSlidesToScroll({ slidesBuffer, currentSlide, snapAlign, itemsToShow, wrapAround, slidesCount, }) {\r\n    let output = slidesBuffer.indexOf(currentSlide);\r\n    if (output === -1) {\r\n        output = slidesBuffer.indexOf(Math.ceil(currentSlide));\r\n    }\r\n    if (snapAlign === 'center' || snapAlign === 'center-odd') {\r\n        output -= (itemsToShow - 1) / 2;\r\n    }\r\n    else if (snapAlign === 'center-even') {\r\n        output -= (itemsToShow - 2) / 2;\r\n    }\r\n    else if (snapAlign === 'end') {\r\n        output -= itemsToShow - 1;\r\n    }\r\n    if (!wrapAround) {\r\n        const max = slidesCount - itemsToShow;\r\n        const min = 0;\r\n        output = Math.max(Math.min(output, max), min);\r\n    }\r\n    return output;\r\n}\n\nvar Carousel = defineComponent({\r\n    name: 'Carousel',\r\n    props: carouselProps,\r\n    setup(props, { slots, emit, expose }) {\r\n        var _a;\r\n        const root = ref(null);\r\n        const slides = ref([]);\r\n        const slidesBuffer = ref([]);\r\n        const slideWidth = ref(0);\r\n        const slidesCount = ref(1);\r\n        let autoplayTimer;\r\n        let transitionTimer;\r\n        let breakpoints = ref({});\r\n        // generate carousel configs\r\n        let __defaultConfig = Object.assign({}, defaultConfigs);\r\n        // current config\r\n        const config = reactive(Object.assign({}, __defaultConfig));\r\n        // slides\r\n        const currentSlideIndex = ref((_a = config.modelValue) !== null && _a !== void 0 ? _a : 0);\r\n        const prevSlideIndex = ref(0);\r\n        const middleSlideIndex = ref(0);\r\n        const maxSlideIndex = ref(0);\r\n        const minSlideIndex = ref(0);\r\n        provide('config', config);\r\n        provide('slidesBuffer', slidesBuffer);\r\n        provide('slidesCount', slidesCount);\r\n        provide('currentSlide', currentSlideIndex);\r\n        provide('maxSlide', maxSlideIndex);\r\n        provide('minSlide', minSlideIndex);\r\n        /**\r\n         * Configs\r\n         */\r\n        function initDefaultConfigs() {\r\n            // generate carousel configs\r\n            const mergedConfigs = Object.assign(Object.assign({}, props), props.settings);\r\n            // Set breakpoints\r\n            breakpoints = ref(Object.assign({}, mergedConfigs.breakpoints));\r\n            // remove extra values\r\n            __defaultConfig = Object.assign(Object.assign({}, mergedConfigs), { settings: undefined, breakpoints: undefined });\r\n            bindConfigs(__defaultConfig);\r\n        }\r\n        function updateBreakpointsConfigs() {\r\n            const breakpointsArray = Object.keys(breakpoints.value)\r\n                .map((key) => Number(key))\r\n                .sort((a, b) => +b - +a);\r\n            let newConfig = Object.assign({}, __defaultConfig);\r\n            breakpointsArray.some((breakpoint) => {\r\n                const isMatched = window.matchMedia(`(min-width: ${breakpoint}px)`).matches;\r\n                if (isMatched) {\r\n                    newConfig = Object.assign(Object.assign({}, newConfig), breakpoints.value[breakpoint]);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            bindConfigs(newConfig);\r\n        }\r\n        function bindConfigs(newConfig) {\r\n            for (let key in newConfig) {\r\n                // @ts-ignore\r\n                config[key] = newConfig[key];\r\n            }\r\n        }\r\n        const handleWindowResize = debounce(() => {\r\n            if (breakpoints.value) {\r\n                updateBreakpointsConfigs();\r\n                updateSlidesData();\r\n            }\r\n            updateSlideWidth();\r\n        }, 16);\r\n        /**\r\n         * Setup functions\r\n         */\r\n        function updateSlideWidth() {\r\n            if (!root.value)\r\n                return;\r\n            const rect = root.value.getBoundingClientRect();\r\n            slideWidth.value = rect.width / config.itemsToShow;\r\n        }\r\n        function updateSlidesData() {\r\n            slidesCount.value = Math.max(slides.value.length, 1);\r\n            if (slidesCount.value <= 0)\r\n                return;\r\n            middleSlideIndex.value = Math.ceil((slidesCount.value - 1) / 2);\r\n            maxSlideIndex.value = getMaxSlideIndex(config, slidesCount.value);\r\n            minSlideIndex.value = getMinSlideIndex(config);\r\n            currentSlideIndex.value = getCurrentSlideIndex(config, currentSlideIndex.value, maxSlideIndex.value, minSlideIndex.value);\r\n        }\r\n        function updateSlidesBuffer() {\r\n            const slidesArray = [...Array(slidesCount.value).keys()];\r\n            const shouldShiftSlides = config.wrapAround && config.itemsToShow + 1 <= slidesCount.value;\r\n            if (shouldShiftSlides) {\r\n                const buffer = config.itemsToShow !== 1\r\n                    ? Math.round((slidesCount.value - config.itemsToShow) / 2)\r\n                    : 0;\r\n                let shifts = buffer - currentSlideIndex.value;\r\n                if (config.snapAlign === 'end') {\r\n                    shifts += Math.floor(config.itemsToShow - 1);\r\n                }\r\n                else if (config.snapAlign === 'center' || config.snapAlign === 'center-odd') {\r\n                    shifts++;\r\n                }\r\n                // Check shifting directions\r\n                if (shifts < 0) {\r\n                    for (let i = shifts; i < 0; i++) {\r\n                        slidesArray.push(Number(slidesArray.shift()));\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 0; i < shifts; i++) {\r\n                        slidesArray.unshift(Number(slidesArray.pop()));\r\n                    }\r\n                }\r\n            }\r\n            slidesBuffer.value = slidesArray;\r\n        }\r\n        onMounted(() => {\r\n            if (breakpoints.value) {\r\n                updateBreakpointsConfigs();\r\n                updateSlidesData();\r\n            }\r\n            nextTick(() => setTimeout(updateSlideWidth, 16));\r\n            initAutoplay();\r\n            window.addEventListener('resize', handleWindowResize, { passive: true });\r\n        });\r\n        onUnmounted(() => {\r\n            if (transitionTimer) {\r\n                clearTimeout(transitionTimer);\r\n            }\r\n            if (autoplayTimer) {\r\n                clearInterval(autoplayTimer);\r\n            }\r\n        });\r\n        /**\r\n         * Carousel Event listeners\r\n         */\r\n        let isTouch = false;\r\n        const startPosition = { x: 0, y: 0 };\r\n        const endPosition = { x: 0, y: 0 };\r\n        const dragged = reactive({ x: 0, y: 0 });\r\n        const isHover = ref(false);\r\n        const handleMouseEnter = () => {\r\n            isHover.value = true;\r\n        };\r\n        const handleMouseLeave = () => {\r\n            isHover.value = false;\r\n        };\r\n        function handleDragStart(event) {\r\n            isTouch = event.type === 'touchstart';\r\n            if ((!isTouch && event.button !== 0) || isSliding.value) {\r\n                return;\r\n            }\r\n            if (!isTouch) {\r\n                event.preventDefault();\r\n            }\r\n            startPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            startPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            document.addEventListener(isTouch ? 'touchmove' : 'mousemove', handleDragging, true);\r\n            document.addEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd, true);\r\n        }\r\n        const handleDragging = throttle((event) => {\r\n            endPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            endPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            const deltaX = endPosition.x - startPosition.x;\r\n            const deltaY = endPosition.y - startPosition.y;\r\n            dragged.y = deltaY;\r\n            dragged.x = deltaX;\r\n        }, 16);\r\n        function handleDragEnd() {\r\n            const direction = config.dir === 'rtl' ? -1 : 1;\r\n            const tolerance = Math.sign(dragged.x) * 0.4;\r\n            const draggedSlides = Math.round(dragged.x / slideWidth.value + tolerance) * direction;\r\n            let newSlide = getCurrentSlideIndex(config, currentSlideIndex.value - draggedSlides, maxSlideIndex.value, minSlideIndex.value);\r\n            // Prevent clicking if there is clicked slides\r\n            if (draggedSlides && !isTouch) {\r\n                const captureClick = (e) => {\r\n                    e.stopPropagation();\r\n                    window.removeEventListener('click', captureClick, true);\r\n                };\r\n                window.addEventListener('click', captureClick, true);\r\n            }\r\n            slideTo(newSlide);\r\n            dragged.x = 0;\r\n            dragged.y = 0;\r\n            document.removeEventListener(isTouch ? 'touchmove' : 'mousemove', handleDragging, true);\r\n            document.removeEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd, true);\r\n        }\r\n        /**\r\n         * Autoplay\r\n         */\r\n        function initAutoplay() {\r\n            if (!config.autoplay || config.autoplay <= 0) {\r\n                return;\r\n            }\r\n            autoplayTimer = setInterval(() => {\r\n                if (config.pauseAutoplayOnHover && isHover.value) {\r\n                    return;\r\n                }\r\n                next();\r\n            }, config.autoplay);\r\n        }\r\n        function resetAutoplay() {\r\n            if (autoplayTimer) {\r\n                clearInterval(autoplayTimer);\r\n                autoplayTimer = null;\r\n            }\r\n            initAutoplay();\r\n        }\r\n        /**\r\n         * Navigation function\r\n         */\r\n        const isSliding = ref(false);\r\n        function slideTo(slideIndex, mute = false) {\r\n            if (currentSlideIndex.value === slideIndex || isSliding.value) {\r\n                return;\r\n            }\r\n            resetAutoplay();\r\n            // Wrap slide index\r\n            const lastSlideIndex = slidesCount.value - 1;\r\n            if (slideIndex > lastSlideIndex) {\r\n                return slideTo(slideIndex - slidesCount.value);\r\n            }\r\n            if (slideIndex < 0) {\r\n                return slideTo(slideIndex + slidesCount.value);\r\n            }\r\n            isSliding.value = true;\r\n            prevSlideIndex.value = currentSlideIndex.value;\r\n            currentSlideIndex.value = slideIndex;\r\n            if (!mute) {\r\n                emit('update:modelValue', currentSlideIndex.value);\r\n            }\r\n            transitionTimer = setTimeout(() => {\r\n                if (config.wrapAround)\r\n                    updateSlidesBuffer();\r\n                isSliding.value = false;\r\n            }, config.transition);\r\n        }\r\n        function next() {\r\n            let nextSlide = currentSlideIndex.value + config.itemsToScroll;\r\n            if (!config.wrapAround) {\r\n                nextSlide = Math.min(nextSlide, maxSlideIndex.value);\r\n            }\r\n            slideTo(nextSlide);\r\n        }\r\n        function prev() {\r\n            let prevSlide = currentSlideIndex.value - config.itemsToScroll;\r\n            if (!config.wrapAround) {\r\n                prevSlide = Math.max(prevSlide, minSlideIndex.value);\r\n            }\r\n            slideTo(prevSlide);\r\n        }\r\n        const nav = { slideTo, next, prev };\r\n        provide('nav', nav);\r\n        /**\r\n         * Track style\r\n         */\r\n        const slidesToScroll = computed(() => getSlidesToScroll({\r\n            slidesBuffer: slidesBuffer.value,\r\n            itemsToShow: config.itemsToShow,\r\n            snapAlign: config.snapAlign,\r\n            wrapAround: Boolean(config.wrapAround),\r\n            currentSlide: currentSlideIndex.value,\r\n            slidesCount: slidesCount.value,\r\n        }));\r\n        provide('slidesToScroll', slidesToScroll);\r\n        const trackStyle = computed(() => {\r\n            const direction = config.dir === 'rtl' ? -1 : 1;\r\n            const xScroll = slidesToScroll.value * slideWidth.value * direction;\r\n            return {\r\n                transform: `translateX(${dragged.x - xScroll}px)`,\r\n                transition: `${isSliding.value ? config.transition : 0}ms`,\r\n            };\r\n        });\r\n        function initCarousel() {\r\n            initDefaultConfigs();\r\n        }\r\n        function restartCarousel() {\r\n            initDefaultConfigs();\r\n            updateBreakpointsConfigs();\r\n            updateSlidesData();\r\n            updateSlidesBuffer();\r\n            updateSlideWidth();\r\n            resetAutoplay();\r\n        }\r\n        function updateCarousel() {\r\n            updateSlidesData();\r\n            updateSlidesBuffer();\r\n        }\r\n        // Update the carousel on props change\r\n        Object.keys(carouselProps).forEach((prop) => {\r\n            if (['modelValue'].includes(prop))\r\n                return;\r\n            watch(() => props[prop], restartCarousel);\r\n        });\r\n        // Init carousel\r\n        initCarousel();\r\n        watchEffect(() => {\r\n            // Handel when slides added/removed\r\n            const needToUpdate = slidesCount.value !== slides.value.length;\r\n            const currentSlideUpdated = props.modelValue !== undefined && currentSlideIndex.value !== props.modelValue;\r\n            if (currentSlideUpdated) {\r\n                slideTo(Number(props.modelValue), true);\r\n            }\r\n            if (needToUpdate) {\r\n                updateCarousel();\r\n            }\r\n        });\r\n        const data = {\r\n            config,\r\n            slidesBuffer,\r\n            slidesCount,\r\n            slideWidth,\r\n            currentSlide: currentSlideIndex,\r\n            maxSlide: maxSlideIndex,\r\n            minSlide: minSlideIndex,\r\n            middleSlide: middleSlideIndex,\r\n        };\r\n        expose({\r\n            updateBreakpointsConfigs,\r\n            updateSlidesData,\r\n            updateSlideWidth,\r\n            updateSlidesBuffer,\r\n            initCarousel,\r\n            restartCarousel,\r\n            updateCarousel,\r\n            slideTo,\r\n            next,\r\n            prev,\r\n            nav,\r\n            data,\r\n        });\r\n        const slotSlides = slots.default || slots.slides;\r\n        const slotAddons = slots.addons;\r\n        const slotsProps = reactive(data);\r\n        return () => {\r\n            const slidesElements = getSlidesVNodes(slotSlides === null || slotSlides === void 0 ? void 0 : slotSlides(slotsProps));\r\n            const addonsElements = (slotAddons === null || slotAddons === void 0 ? void 0 : slotAddons(slotsProps)) || [];\r\n            slides.value = slidesElements;\r\n            // Bind slide order\r\n            slidesElements.forEach((el, index) => (el.props.index = index));\r\n            const trackEl = h('ol', {\r\n                class: 'carousel__track',\r\n                style: trackStyle.value,\r\n                onMousedown: config.mouseDrag\r\n                    ? withModifiers(handleDragStart, ['capture'])\r\n                    : null,\r\n                onTouchstart: config.touchDrag\r\n                    ? withModifiers(handleDragStart, ['capture'])\r\n                    : null,\r\n            }, slidesElements);\r\n            const viewPortEl = h('div', { class: 'carousel__viewport' }, trackEl);\r\n            return h('section', {\r\n                ref: root,\r\n                class: {\r\n                    carousel: true,\r\n                    'carousel--rtl': config.dir === 'rtl',\r\n                },\r\n                dir: config.dir,\r\n                'aria-label': 'Gallery',\r\n                onMouseenter: handleMouseEnter,\r\n                onMouseleave: handleMouseLeave,\r\n            }, [viewPortEl, addonsElements]);\r\n        };\r\n    },\r\n});\n\nconst icons = {\r\n    arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\r\n    arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\r\n    arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\r\n    arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\r\n};\n\nconst Icon = (props) => {\r\n    const iconName = props.name;\r\n    if (!iconName || typeof iconName !== 'string') {\r\n        return;\r\n    }\r\n    const path = icons[iconName];\r\n    const pathEl = h('path', { d: path });\r\n    const iconTitle = (props.title || iconName);\r\n    const titleEl = h('title', iconTitle);\r\n    return h('svg', {\r\n        class: 'carousel__icon',\r\n        viewBox: '0 0 24 24',\r\n        role: 'img',\r\n        ariaLabel: iconTitle,\r\n    }, [titleEl, pathEl]);\r\n};\r\nIcon.props = { name: String, title: String };\n\nconst Navigation = (props, { slots, attrs }) => {\r\n    const { next: slotNext, prev: slotPrev } = slots || {};\r\n    const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n    const maxSlide = inject('maxSlide', ref(1));\r\n    const minSlide = inject('minSlide', ref(1));\r\n    const currentSlide = inject('currentSlide', ref(1));\r\n    const nav = inject('nav', {});\r\n    const isRTL = config.dir === 'rtl';\r\n    const prevButton = h('button', {\r\n        type: 'button',\r\n        class: [\r\n            'carousel__prev',\r\n            !config.wrapAround &&\r\n                currentSlide.value <= minSlide.value &&\r\n                'carousel__prev--in-active',\r\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\r\n        ],\r\n        'aria-label': `Navigate to previous slide`,\r\n        onClick: nav.prev,\r\n    }, (slotPrev === null || slotPrev === void 0 ? void 0 : slotPrev()) || h(Icon, { name: isRTL ? 'arrowRight' : 'arrowLeft' }));\r\n    const nextButton = h('button', {\r\n        type: 'button',\r\n        class: [\r\n            'carousel__next',\r\n            !config.wrapAround &&\r\n                currentSlide.value >= maxSlide.value &&\r\n                'carousel__next--in-active',\r\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\r\n        ],\r\n        'aria-label': `Navigate to next slide`,\r\n        onClick: nav.next,\r\n    }, (slotNext === null || slotNext === void 0 ? void 0 : slotNext()) || h(Icon, { name: isRTL ? 'arrowLeft' : 'arrowRight' }));\r\n    return [prevButton, nextButton];\r\n};\n\nvar Slide = defineComponent({\r\n    name: 'CarouselSlide',\r\n    props: {\r\n        index: {\r\n            type: Number,\r\n            default: 1,\r\n        },\r\n    },\r\n    setup(props, { slots }) {\r\n        const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n        const slidesBuffer = inject('slidesBuffer', ref([]));\r\n        const currentSlide = inject('currentSlide', ref(0));\r\n        const slidesToScroll = inject('slidesToScroll', ref(0));\r\n        const wrapOrder = ref(props.index);\r\n        if (config.wrapAround) {\r\n            updateOrder();\r\n            watch(slidesBuffer, updateOrder);\r\n        }\r\n        function updateOrder() {\r\n            wrapOrder.value = slidesBuffer.value.indexOf(props.index);\r\n        }\r\n        const slideStyle = computed(() => {\r\n            const items = config.itemsToShow;\r\n            const width = `${(1 / items) * 100}%`;\r\n            return {\r\n                width,\r\n                order: wrapOrder.value.toString(),\r\n            };\r\n        });\r\n        const isActive = () => props.index === currentSlide.value;\r\n        const isVisible = () => {\r\n            const min = Math.ceil(slidesToScroll.value);\r\n            const max = Math.floor(slidesToScroll.value + config.itemsToShow);\r\n            const current = slidesBuffer.value.slice(min, max);\r\n            return current.includes(props.index);\r\n        };\r\n        const isPrev = () => props.index === slidesBuffer.value[Math.ceil(slidesToScroll.value) - 1];\r\n        const isNext = () => props.index ===\r\n            slidesBuffer.value[Math.floor(slidesToScroll.value + config.itemsToShow)];\r\n        return () => {\r\n            var _a;\r\n            return h('li', {\r\n                style: slideStyle.value,\r\n                class: {\r\n                    carousel__slide: true,\r\n                    'carousel__slide--active': isActive(),\r\n                    'carousel__slide--visible': isVisible(),\r\n                    'carousel__slide--prev': isPrev(),\r\n                    'carousel__slide--next': isNext(),\r\n                },\r\n            }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\r\n        };\r\n    },\r\n});\n\nconst Pagination = () => {\r\n    const maxSlide = inject('maxSlide', ref(1));\r\n    const minSlide = inject('minSlide', ref(1));\r\n    const currentSlide = inject('currentSlide', ref(1));\r\n    const nav = inject('nav', {});\r\n    function handleButtonClick(slideNumber) {\r\n        nav.slideTo(slideNumber);\r\n    }\r\n    const isActive = (slide) => {\r\n        const val = currentSlide.value;\r\n        return (val === slide ||\r\n            (val > maxSlide.value && slide >= maxSlide.value) ||\r\n            (val < minSlide.value && slide <= minSlide.value));\r\n    };\r\n    const children = [];\r\n    for (let slide = minSlide.value; slide < maxSlide.value + 1; slide++) {\r\n        const button = h('button', {\r\n            type: 'button',\r\n            class: {\r\n                'carousel__pagination-button': true,\r\n                'carousel__pagination-button--active': isActive(slide),\r\n            },\r\n            'aria-label': `Navigate to slide ${slide + 1}`,\r\n            onClick: () => handleButtonClick(slide),\r\n        });\r\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button);\r\n        children.push(item);\r\n    }\r\n    return h('ol', { class: 'carousel__pagination' }, children);\r\n};\n\nexport { Carousel, Icon, Navigation, Pagination, Slide };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}