{"ast":null,"code":"import axios from \"axios\"; // import { toast } from 'bulma-toast'\n\nimport Swal from 'sweetalert2';\nexport default {\n  name: \"SignUp\",\n\n  data() {\n    return {\n      username: \"\",\n      account_type: \"\",\n      password: \"\",\n      password2: \"\",\n      email: \"\",\n      errors: []\n    };\n  },\n\n  methods: {\n    submitForm() {\n      this.errors = [];\n\n      if (this.username === \"\") {\n        this.errors.push(\"The username is missing\");\n      }\n\n      if (this.password === \"\") {\n        this.errors.push(\"The password is too short\");\n      }\n\n      if (!this.email) {\n        this.errors.push(\"Email is Required\");\n      }\n\n      if (this.password !== this.password2) {\n        this.errors.push(\"The passwords doesn't match\");\n      }\n\n      if (!this.errors.length) {\n        let approved;\n\n        if (this.account_type == 'Consumer') {\n          approved = true;\n        } else {\n          approved = false;\n        }\n\n        console.log(approved);\n        const formData = {\n          username: this.username,\n          password: this.password,\n          email: this.email,\n          account_type: this.account_type,\n          approved: approved\n        };\n        axios.post(\"/api/v1/CustomUser/\", formData).then(response => {\n          console.log(response);\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'Account Successfully Created',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.$router.push(\"/log-in\");\n        }).catch(error => {\n          if (error.response) {\n            for (const property in error.response.data) {\n              this.errors.push(`${property}: ${error.response.data[property]}`);\n            }\n\n            console.log(JSON.stringify(error.response.data));\n          } else if (error.message) {\n            this.errors.push(\"Something went wrong. Please try again\");\n            console.log(JSON.stringify(error));\n          }\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2FA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,eAAe;EACbC,IAAI,EAAE,QADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,YAAY,EAAC,EAFR;MAGLC,QAAQ,EAAE,EAHL;MAILC,SAAS,EAAE,EAJN;MAKLC,KAAK,EAAC,EALD;MAMLC,MAAM,EAAE;IANH,CAAP;EAQD,CAXY;;EAYbC,OAAO,EAAE;IACPC,UAAU,GAAG;MACX,KAAKF,MAAL,GAAc,EAAd;;MACA,IAAI,KAAKL,QAAL,KAAkB,EAAtB,EAA0B;QACxB,KAAKK,MAAL,CAAYG,IAAZ,CAAiB,yBAAjB;MACF;;MACA,IAAI,KAAKN,QAAL,KAAkB,EAAtB,EAA0B;QACxB,KAAKG,MAAL,CAAYG,IAAZ,CAAiB,2BAAjB;MACF;;MACA,IAAI,CAAC,KAAKJ,KAAV,EAAiB;QACf,KAAKC,MAAL,CAAYG,IAAZ,CAAiB,mBAAjB;MACF;;MACA,IAAI,KAAKN,QAAL,KAAkB,KAAKC,SAA3B,EAAsC;QACpC,KAAKE,MAAL,CAAYG,IAAZ,CAAiB,6BAAjB;MACF;;MACA,IAAI,CAAC,KAAKH,MAAL,CAAYI,MAAjB,EAAyB;QACvB,IAAIC,QAAJ;;QACA,IAAI,KAAKT,YAAL,IAAoB,UAAxB,EAAmC;UACjCS,QAAO,GAAI,IAAX;QACD,CAFD,MAEK;UACHA,QAAO,GAAI,KAAX;QACF;;QACAC,OAAO,CAACC,GAAR,CAAYF,QAAZ;QACA,MAAMG,QAAO,GAAI;UACfb,QAAQ,EAAE,KAAKA,QADA;UAEfE,QAAQ,EAAE,KAAKA,QAFA;UAGfE,KAAK,EAAE,KAAKA,KAHG;UAIfH,YAAY,EAAE,KAAKA,YAJJ;UAKfS,QAAO,EAAIA;QALI,CAAjB;QAOAd,KAAI,CACDkB,IADH,CACQ,qBADR,EAC+BD,QAD/B,EAEGE,IAFH,CAESC,QAAD,IAAc;UAChBL,OAAO,CAACC,GAAR,CAAYI,QAAZ;UACJnB,IAAI,CAACoB,IAAL,CAAU;YACRC,QAAQ,EAAE,SADF;YAERC,IAAI,EAAE,SAFE;YAGRC,KAAK,EAAE,8BAHC;YAIRC,iBAAiB,EAAE,KAJX;YAKRC,KAAK,EAAE;UALC,CAAV;UAOE,KAAKC,OAAL,CAAaf,IAAb,CAAkB,SAAlB;QACD,CAZH,EAaGgB,KAbH,CAaUC,KAAD,IAAW;UAChB,IAAIA,KAAK,CAACT,QAAV,EAAoB;YAClB,KAAK,MAAMU,QAAX,IAAuBD,KAAK,CAACT,QAAN,CAAejB,IAAtC,EAA4C;cAC1C,KAAKM,MAAL,CAAYG,IAAZ,CACG,GAAEkB,QAAS,KAAID,KAAK,CAACT,QAAN,CAAejB,IAAf,CAAoB2B,QAApB,CAA8B,EADhD;YAGF;;YACAf,OAAO,CAACC,GAAR,CAAYe,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACT,QAAN,CAAejB,IAA9B,CAAZ;UACF,CAPA,MAOO,IAAI0B,KAAK,CAACI,OAAV,EAAmB;YACxB,KAAKxB,MAAL,CAAYG,IAAZ,CAAiB,wCAAjB;YACAG,OAAO,CAACC,GAAR,CAAYe,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAZ;UACF;QACD,CAzBH;MA0BF;IACD;;EAzDM;AAZI,CAAf","names":["axios","Swal","name","data","username","account_type","password","password2","email","errors","methods","submitForm","push","length","approved","console","log","formData","post","then","response","fire","position","icon","title","showConfirmButton","timer","$router","catch","error","property","JSON","stringify","message"],"sourceRoot":"","sources":["/home/faiz/Anas-Defy/glass-vue/src/views/signup.vue"],"sourcesContent":["<template>\n\n  <div class=\"page-sign-up m-5 row\">\n        <div class=\"col-4 \">\n\n        </div>\n      <div class=\"col-4 is-offset-4\">\n        <h1 class=\"heading\"> <b>  Sign up </b></h1>\n\n        <form @submit.prevent=\"submitForm\" >\n          <div class=\"form-group mt-4 mb-5\">\n            <!-- <label for=\"formGroupExampleInput\" class=\"form-label\">Username</label> -->\n            <p class=\"form-label\"> <b> Username </b></p> \n            <div class=\"\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput\"\n                placeholder=\"Enter Useraname\"\n                v-model=\"username\"\n              />\n            </div>\n          </div>\n\n          <div class=\"form-group mt-4 mb-5\">\n            <!-- <label for=\"formGroupExampleInput\" class=\"form-label\">Username</label> -->\n            <p class=\"form-label\"> <b> Email </b></p> \n            <div class=\"\">\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                id=\"formGroupExampleInput\"\n                placeholder=\"Enter Email Address\"\n                v-model=\"email\"\n              />\n            </div>\n          </div>\n\n          <!-- <p class=\"form-label\"> <strong> Account Type</strong></p> \n          <select class=\"form-control\" aria-label=\"Default select example\" v-model=\"this.account_type\">\n            <option value=\"Consumer\">Consumer Account</option>\n            <option value=\"Retailer\">Wholesale Account or “Retailer”</option>\n            <option value=\"Distributor\">Distributor Account</option>\n            <option value=\"Affiliate\">Affiliate or “AGO Representative”</option>\n            <option value=\"Referral Partner\">Referral Partner Program</option>\n          </select> -->\n            <div class=\"form-group mt-4 mb-5\" >\n                <!-- <label for=\"formGroupExampleInput2\">Password</label> -->\n                <p class=\"form-label\"> <strong> Password</strong></p> \n                <div class=\"control\">\n                <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"formGroupExampleInput2\"\n                    placeholder=\"Enter Password\"\n                    v-model=\"password\"\n                />\n                </div>\n          </div>\n\n            <div class=\"form-group mt-4 mb-5\" >\n                <!-- <label for=\"formGroupExampleInput3\">Repeat Password</label> -->\n                <p class=\"form-label\"> <b> Repeat Password</b></p>\n                <div class=\"control\">\n                <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"formGroupExampleInput3\"\n                    placeholder=\"Enter Password Again\"\n                    v-model=\"password2\"\n                />\n                </div>\n            </div>\n\n          <!-- warning -->\n          <div class=\"notification is-danger\" v-if=\"errors.length\">\n            <p v-for=\"error in errors\" v-bind:key=\"error\">{{ error }}</p>\n          </div>\n\n            <button type=\"submit\" class=\"btn btn-success\">Sign up</button>\n\n          <hr />\n\n          Or <router-link to=\"/log-in\"> click here</router-link> <b> to Log in! </b> \n          \n        </form>\n      </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n// import { toast } from 'bulma-toast'\nimport Swal from 'sweetalert2'\nexport default {\n  name: \"SignUp\",\n  data() {\n    return {\n      username: \"\",\n      account_type:\"\",\n      password: \"\",\n      password2: \"\",\n      email:\"\",\n      errors: [],\n    };\n  },\n  methods: {\n    submitForm() {\n      this.errors = [];\n      if (this.username === \"\") {\n        this.errors.push(\"The username is missing\");\n      }\n      if (this.password === \"\") {\n        this.errors.push(\"The password is too short\");\n      }\n      if (!this.email) {\n        this.errors.push(\"Email is Required\");\n      }\n      if (this.password !== this.password2) {\n        this.errors.push(\"The passwords doesn't match\");\n      }\n      if (!this.errors.length) {\n        let approved;\n        if (this.account_type== 'Consumer'){\n          approved = true\n        }else{\n          approved = false\n        }\n        console.log(approved)\n        const formData = {\n          username: this.username,\n          password: this.password,\n          email: this.email,\n          account_type: this.account_type,\n          approved : approved\n        };\n        axios\n          .post(\"/api/v1/CustomUser/\", formData)\n          .then((response) => {\n              console.log(response)\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'Account Successfully Created',\n            showConfirmButton: false,\n            timer: 1500\n          })\n            this.$router.push(\"/log-in\");\n          })\n          .catch((error) => {\n            if (error.response) {\n              for (const property in error.response.data) {\n                this.errors.push(\n                  `${property}: ${error.response.data[property]}`\n                );\n              }\n              console.log(JSON.stringify(error.response.data));\n            } else if (error.message) {\n              this.errors.push(\"Something went wrong. Please try again\");\n              console.log(JSON.stringify(error));\n            }\n          });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\na{\n    color: green;\n    font-weight: bolder;\n}\n.form-label {\n  /* display: inline-block;\n  width: 140px; */\n  margin-bottom: 2px;\n  text-align: left;\n  color: green;\n}\n</style>"]},"metadata":{},"sourceType":"module"}