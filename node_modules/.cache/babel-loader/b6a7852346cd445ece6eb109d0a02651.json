{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"CartItem\",\n  props: {\n    initialItem: Object\n  },\n\n  data() {\n    return {\n      item: this.initialItem,\n      account_details: [],\n      discount: 1\n    };\n  },\n\n  mounted() {\n    this.getAccountDetails();\n  },\n\n  methods: {\n    getItemTotal(item) {\n      if (this.account_details.account_type != 'Consumer' && this.account_details.approved == true) {\n        return item.quantity * item.price * this.discount;\n      } else if (this.account_details.account_type != 'Consumer' && this.account_details.approved == false) {\n        return item.quantity * item.price;\n      } else if (this.discount != 1) {\n        return item.quantity * item.price * this.discount;\n      } else {\n        return item.quantity * item.price * this.discount;\n      }\n    },\n\n    decrementQuantity(item) {\n      item.quantity -= 1;\n\n      if (item.quantity === 0) {\n        this.$emit(\"removeFromCart\", item);\n      }\n\n      this.updateCart();\n    },\n\n    incrementQuantity(item) {\n      item.quantity += 1;\n      this.updateCart();\n    },\n\n    updateCart() {\n      localStorage.setItem(\"cart\", JSON.stringify(this.$store.state.cart));\n    },\n\n    removeFromCart(item) {\n      this.$emit(\"removeFromCart\", item);\n      this.updateCart();\n    },\n\n    getAccountDetails() {\n      axios.get(`/api/v1/CustomUser/${localStorage.getItem('userid')}/`).then(response => {\n        this.account_details = response.data;\n        this.setDiscount();\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    setDiscount() {\n      console.log(\"hello \", this.account_details.account_type);\n\n      if (this.account_details.account_type == \"Retailer\") {\n        this.discount = 0.6;\n      } else if (this.account_details.account_type == \"Distributor\") {\n        console.log(\"distributor\");\n        this.discount = 0.4;\n      } else {\n        this.discount = 1;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8DA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACbC,IAAI,EAAE,UADO;EAEbC,KAAK,EAAE;IACLC,WAAW,EAAEC;EADR,CAFM;;EAKbC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,KAAKH,WADN;MAELI,eAAe,EAAC,EAFX;MAGLC,QAAQ,EAAC;IAHJ,CAAP;EAKD,CAXY;;EAYbC,OAAO,GAAE;IACP,KAAKC,iBAAL;EACD,CAdY;;EAebC,OAAO,EAAE;IACPC,YAAY,CAACN,IAAD,EAAO;MACjB,IAAI,KAAKC,eAAL,CAAqBM,YAArB,IAAmC,UAAnC,IAAiD,KAAKN,eAAL,CAAqBO,QAArB,IAA+B,IAApF,EAAyF;QACvF,OAAOR,IAAI,CAACS,QAAL,GAAgBT,IAAI,CAACU,KAArB,GAA4B,KAAKR,QAAxC;MACF,CAFA,MAGK,IAAG,KAAKD,eAAL,CAAqBM,YAArB,IAAmC,UAAnC,IAAiD,KAAKN,eAAL,CAAqBO,QAArB,IAA+B,KAAnF,EAA0F;QAC7F,OAAOR,IAAI,CAACS,QAAL,GAAgBT,IAAI,CAACU,KAA5B;MACF,CAFK,MAGA,IAAG,KAAKR,QAAL,IAAe,CAAlB,EAAqB;QACxB,OAAOF,IAAI,CAACS,QAAL,GAAgBT,IAAI,CAACU,KAArB,GAA4B,KAAKR,QAAxC;MACF,CAFK,MAGD;QACF,OAAOF,IAAI,CAACS,QAAL,GAAgBT,IAAI,CAACU,KAArB,GAA4B,KAAKR,QAAxC;MACF;IACD,CAdM;;IAePS,iBAAiB,CAACX,IAAD,EAAO;MACtBA,IAAI,CAACS,QAAL,IAAiB,CAAjB;;MACA,IAAIT,IAAI,CAACS,QAAL,KAAkB,CAAtB,EAAyB;QACvB,KAAKG,KAAL,CAAW,gBAAX,EAA6BZ,IAA7B;MACF;;MACA,KAAKa,UAAL;IACD,CArBM;;IAsBPC,iBAAiB,CAACd,IAAD,EAAO;MACtBA,IAAI,CAACS,QAAL,IAAiB,CAAjB;MACA,KAAKI,UAAL;IACD,CAzBM;;IA0BPA,UAAU,GAAG;MACXE,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,IAAjC,CAA7B;IACD,CA5BM;;IA6BPC,cAAc,CAACtB,IAAD,EAAO;MACnB,KAAKY,KAAL,CAAW,gBAAX,EAA6BZ,IAA7B;MACA,KAAKa,UAAL;IACD,CAhCM;;IAiCPT,iBAAiB,GAAE;MACfV,KAAK,CAAC6B,GAAN,CAAW,sBAAqBR,YAAY,CAACS,OAAb,CAAqB,QAArB,CAA+B,GAA/D,EACGC,IADH,CACQC,QAAQ,IAAE;QACd,KAAKzB,eAAL,GAAqByB,QAAQ,CAAC3B,IAA9B;QACA,KAAK4B,WAAL;MACD,CAJH,EAKGC,KALH,CAKSC,KAAK,IAAE;QACVC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACH,CAPH;IAQD,CA1CI;;IA2CLF,WAAW,GAAE;MACXG,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB,KAAK9B,eAAL,CAAqBM,YAA1C;;MACA,IAAI,KAAKN,eAAL,CAAqBM,YAArB,IAAmC,UAAvC,EAAkD;QAChD,KAAKL,QAAL,GAAc,GAAd;MACF,CAFA,MAGK,IAAI,KAAKD,eAAL,CAAqBM,YAArB,IAAmC,aAAvC,EAAqD;QACxDuB,OAAO,CAACC,GAAR,CAAY,aAAZ;QACA,KAAK7B,QAAL,GAAc,GAAd;MACF,CAHK,MAID;QACF,KAAKA,QAAL,GAAc,CAAd;MACF;IACF;;EAvDK;AAfI,CAAf","names":["axios","name","props","initialItem","Object","data","item","account_details","discount","mounted","getAccountDetails","methods","getItemTotal","account_type","approved","quantity","price","decrementQuantity","$emit","updateCart","incrementQuantity","localStorage","setItem","JSON","stringify","$store","state","cart","removeFromCart","get","getItem","then","response","setDiscount","catch","error","console","log"],"sourceRoot":"","sources":["/home/fiaz/Documents/GitHub/gtl-vue/src/components/CartItem.vue"],"sourcesContent":["<template>\n  <!-- <div v-if=\"item.quantity!=0\"> -->\n\n  <tr v-if=\"item.quantity != 0\" class=\"\">\n    <!-- {{item}} -->\n    <td>\n      <a :href=\"'/products/' + item.product.id\"> {{ item.product.name }}</a>\n    </td>\n    <td>{{ item.product.size }}</td>\n<!--  -->\n              <td v-if=\"account_details.account_type!='Consumer' && account_details.approved==true\" >\n                 ${{ item.price * discount}} \n              </td>\n              <td v-else-if=\"account_details.account_type!='Consumer' && account_details.approved==false\" >\n                 ${{ item.price }}\n              </td>\n              <td v-else-if=\"discount!=1\">\n                  ${{ item.price * discount }}           \n              </td>\n              <td v-else>\n                 ${{ item.price }}                \n              </td>\n<!--  -->\n    <!-- <td>${{ item.price }}</td> -->\n    <td>\n      <a @click=\"decrementQuantity(item)\"\n        ><svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"25\"\n          height=\"25\"\n          style=\"color: green\"\n          fill=\"currentColor\"\n          class=\"bi bi-dash\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path\n            d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"\n          /></svg\n      ></a>\n      {{ item.quantity }}\n      <a @click=\"incrementQuantity(item)\"\n        ><svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"25\"\n          height=\"25\"\n          style=\"color: green\"\n          fill=\"currentColor\"\n          class=\"bi bi-plus\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path\n            d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n          /></svg\n      ></a>\n    </td>\n    <td>${{ getItemTotal(item).toFixed(2) }}</td>\n    <!-- <td><button class=\"delete\" @click=\"removeFromCart(item)\"></button>delete</td> -->\n  </tr>\n  <!-- </div> -->\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  name: \"CartItem\",\n  props: {\n    initialItem: Object,\n  },\n  data() {\n    return {\n      item: this.initialItem,\n      account_details:[],\n      discount:1\n    };\n  },\n  mounted(){\n    this.getAccountDetails()\n  },\n  methods: {\n    getItemTotal(item) {\n      if (this.account_details.account_type!='Consumer' && this.account_details.approved==true){\n        return item.quantity * item.price *this.discount;        \n      }\n      else if(this.account_details.account_type!='Consumer' && this.account_details.approved==false) {\n        return item.quantity * item.price ;\n      }\n      else if(this.discount!=1) {\n        return item.quantity * item.price *this.discount ;\n      }\n      else{\n        return item.quantity * item.price *this.discount;\n      }\n    },\n    decrementQuantity(item) {\n      item.quantity -= 1;\n      if (item.quantity === 0) {\n        this.$emit(\"removeFromCart\", item);\n      }\n      this.updateCart();\n    },\n    incrementQuantity(item) {\n      item.quantity += 1;\n      this.updateCart();\n    },\n    updateCart() {\n      localStorage.setItem(\"cart\", JSON.stringify(this.$store.state.cart));\n    },\n    removeFromCart(item) {\n      this.$emit(\"removeFromCart\", item);\n      this.updateCart();\n    },      \n    getAccountDetails(){\n        axios.get(`/api/v1/CustomUser/${localStorage.getItem('userid')}/`)\n          .then(response=>{\n            this.account_details=response.data\n            this.setDiscount()\n          })\n          .catch(error=>{\n              console.log(error)\n          })\n      },\n      setDiscount(){\n        console.log(\"hello \",this.account_details.account_type)\n        if (this.account_details.account_type==\"Retailer\"){\n          this.discount=0.6\n        }\n        else if (this.account_details.account_type==\"Distributor\"){\n          console.log(\"distributor\")\n          this.discount=0.4\n        }\n        else{\n          this.discount=1\n        }\n      }\n  },\n};\n</script>\n\n<style scoped>\na {\n  color: black;\n}\n</style>"]},"metadata":{},"sourceType":"module"}