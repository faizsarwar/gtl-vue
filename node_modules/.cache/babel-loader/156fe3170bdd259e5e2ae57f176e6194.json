{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: $data.compId\n  }, null, 8\n  /* PROPS */\n  , _hoisted_1);\n}","map":{"version":3,"mappings":";;;uBACEA,oBACM,KADN,EACM;IADAC,EAAE,EAAEC;EACJ,CADN,EAAgB,IAAhB,EAAgB;EAAA;EAAhB,EAAgBC,UAAhB","names":["_createElementBlock","id","$data","_hoisted_1"],"sourceRoot":"","sources":["/home/fiaz/Documents/GitHub/gtl-vue/node_modules/vue-script-component/src/components/VueScriptComponent.vue"],"sourcesContent":["<template>\n  <div :id=\"compId\">\n  </div>\n</template>\n\n<script>\nimport postscribe from \"postscribe\"\nvar ready = require('document-ready')\n\nexport default {\n  name: \"VueScriptComponent\",\n  props:[\"script\"],\n  data() {\n    return {\n      compId: Date.now() //we will use date.now as a soft ID so that users may load multiple vue-script-components without conflicting ids\n    };\n  },\n\n  mounted() {\n    var vm = this\n    ready(function () {\n      let addEl = new Promise((resolve, reject) => {\n          postscribe(\n            `#${vm.compId}`,\n            `${vm.script}`,\n            {\n              done: function(x) {}\n            }\n          );\n\n        resolve()\n      });      \n      addEl.then(function(result) {\n          //do nothing\n      })\n    })\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}